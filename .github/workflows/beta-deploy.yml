on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    environment: BETA
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          scope: '@dcoutinho96'
      - run: echo "@dcoutinho96:registry=https://npm.pkg.github.com" > .npmrc
      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run test:unit
        env:
          NODE_ENV: test
          CI: true
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          if-no-files-found: error

  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    environment: BETA
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectBaseDir=.
            -Dsonar.qualitygate.wait=true
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: sonar
    environment: BETA
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          scope: '@dcoutinho96'
      - run: echo "@dcoutinho96:registry=https://npm.pkg.github.com" > .npmrc
      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run build
        env:
          ENV: BETA
          NODE_ENV: production
          CI: true

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build
    environment: BETA
    steps:
      - run: curl -sS -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
